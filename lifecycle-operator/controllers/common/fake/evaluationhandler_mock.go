// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package fake

import (
	"context"
	lfcv1alpha3 "github.com/keptn/lifecycle-toolkit/lifecycle-operator/apis/lifecycle/v1alpha3"
	apicommon "github.com/keptn/lifecycle-toolkit/lifecycle-operator/apis/lifecycle/v1alpha3/common"
	"github.com/keptn/lifecycle-toolkit/lifecycle-operator/controllers/common"
	"sigs.k8s.io/controller-runtime/pkg/client"
	"sync"
)

// MockEvaluationHandler is a mock implementation of common.EvaluationHandlerInterface.
//
//	func TestSomethingThatUsesEvaluationHandlerInterface(t *testing.T) {
//
//		// make and configure a mocked common.EvaluationHandlerInterface
//		mockedEvaluationHandlerInterface := &MockEvaluationHandler{
//			CreateKeptnEvaluationFunc: func(ctx context.Context, namespace string, reconcileObject client.Object, evaluationCreateAttributes common.CreateEvaluationAttributes) (string, error) {
//				panic("mock out the CreateKeptnEvaluation method")
//			},
//			ReconcileEvaluationsFunc: func(ctx context.Context, phaseCtx context.Context, reconcileObject client.Object, evaluationCreateAttributes common.CreateEvaluationAttributes) ([]lfcv1alpha3.ItemStatus, apicommon.StatusSummary, error) {
//				panic("mock out the ReconcileEvaluations method")
//			},
//		}
//
//		// use mockedEvaluationHandlerInterface in code that requires common.EvaluationHandlerInterface
//		// and then make assertions.
//
//	}
type MockEvaluationHandler struct {
	// CreateKeptnEvaluationFunc mocks the CreateKeptnEvaluation method.
	CreateKeptnEvaluationFunc func(ctx context.Context, namespace string, reconcileObject client.Object, evaluationCreateAttributes common.CreateEvaluationAttributes) (string, error)

	// ReconcileEvaluationsFunc mocks the ReconcileEvaluations method.
	ReconcileEvaluationsFunc func(ctx context.Context, phaseCtx context.Context, reconcileObject client.Object, evaluationCreateAttributes common.CreateEvaluationAttributes) ([]lfcv1alpha3.ItemStatus, apicommon.StatusSummary, error)

	// calls tracks calls to the methods.
	calls struct {
		// CreateKeptnEvaluation holds details about calls to the CreateKeptnEvaluation method.
		CreateKeptnEvaluation []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Namespace is the namespace argument value.
			Namespace string
			// ReconcileObject is the reconcileObject argument value.
			ReconcileObject client.Object
			// EvaluationCreateAttributes is the evaluationCreateAttributes argument value.
			EvaluationCreateAttributes common.CreateEvaluationAttributes
		}
		// ReconcileEvaluations holds details about calls to the ReconcileEvaluations method.
		ReconcileEvaluations []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// PhaseCtx is the phaseCtx argument value.
			PhaseCtx context.Context
			// ReconcileObject is the reconcileObject argument value.
			ReconcileObject client.Object
			// EvaluationCreateAttributes is the evaluationCreateAttributes argument value.
			EvaluationCreateAttributes common.CreateEvaluationAttributes
		}
	}
	lockCreateKeptnEvaluation sync.RWMutex
	lockReconcileEvaluations  sync.RWMutex
}

// CreateKeptnEvaluation calls CreateKeptnEvaluationFunc.
func (mock *MockEvaluationHandler) CreateKeptnEvaluation(ctx context.Context, namespace string, reconcileObject client.Object, evaluationCreateAttributes common.CreateEvaluationAttributes) (string, error) {
	if mock.CreateKeptnEvaluationFunc == nil {
		panic("MockEvaluationHandler.CreateKeptnEvaluationFunc: method is nil but EvaluationHandlerInterface.CreateKeptnEvaluation was just called")
	}
	callInfo := struct {
		Ctx                        context.Context
		Namespace                  string
		ReconcileObject            client.Object
		EvaluationCreateAttributes common.CreateEvaluationAttributes
	}{
		Ctx:                        ctx,
		Namespace:                  namespace,
		ReconcileObject:            reconcileObject,
		EvaluationCreateAttributes: evaluationCreateAttributes,
	}
	mock.lockCreateKeptnEvaluation.Lock()
	mock.calls.CreateKeptnEvaluation = append(mock.calls.CreateKeptnEvaluation, callInfo)
	mock.lockCreateKeptnEvaluation.Unlock()
	return mock.CreateKeptnEvaluationFunc(ctx, namespace, reconcileObject, evaluationCreateAttributes)
}

// CreateKeptnEvaluationCalls gets all the calls that were made to CreateKeptnEvaluation.
// Check the length with:
//
//	len(mockedEvaluationHandlerInterface.CreateKeptnEvaluationCalls())
func (mock *MockEvaluationHandler) CreateKeptnEvaluationCalls() []struct {
	Ctx                        context.Context
	Namespace                  string
	ReconcileObject            client.Object
	EvaluationCreateAttributes common.CreateEvaluationAttributes
} {
	var calls []struct {
		Ctx                        context.Context
		Namespace                  string
		ReconcileObject            client.Object
		EvaluationCreateAttributes common.CreateEvaluationAttributes
	}
	mock.lockCreateKeptnEvaluation.RLock()
	calls = mock.calls.CreateKeptnEvaluation
	mock.lockCreateKeptnEvaluation.RUnlock()
	return calls
}

// ReconcileEvaluations calls ReconcileEvaluationsFunc.
func (mock *MockEvaluationHandler) ReconcileEvaluations(ctx context.Context, phaseCtx context.Context, reconcileObject client.Object, evaluationCreateAttributes common.CreateEvaluationAttributes) ([]lfcv1alpha3.ItemStatus, apicommon.StatusSummary, error) {
	if mock.ReconcileEvaluationsFunc == nil {
		panic("MockEvaluationHandler.ReconcileEvaluationsFunc: method is nil but EvaluationHandlerInterface.ReconcileEvaluations was just called")
	}
	callInfo := struct {
		Ctx                        context.Context
		PhaseCtx                   context.Context
		ReconcileObject            client.Object
		EvaluationCreateAttributes common.CreateEvaluationAttributes
	}{
		Ctx:                        ctx,
		PhaseCtx:                   phaseCtx,
		ReconcileObject:            reconcileObject,
		EvaluationCreateAttributes: evaluationCreateAttributes,
	}
	mock.lockReconcileEvaluations.Lock()
	mock.calls.ReconcileEvaluations = append(mock.calls.ReconcileEvaluations, callInfo)
	mock.lockReconcileEvaluations.Unlock()
	return mock.ReconcileEvaluationsFunc(ctx, phaseCtx, reconcileObject, evaluationCreateAttributes)
}

// ReconcileEvaluationsCalls gets all the calls that were made to ReconcileEvaluations.
// Check the length with:
//
//	len(mockedEvaluationHandlerInterface.ReconcileEvaluationsCalls())
func (mock *MockEvaluationHandler) ReconcileEvaluationsCalls() []struct {
	Ctx                        context.Context
	PhaseCtx                   context.Context
	ReconcileObject            client.Object
	EvaluationCreateAttributes common.CreateEvaluationAttributes
} {
	var calls []struct {
		Ctx                        context.Context
		PhaseCtx                   context.Context
		ReconcileObject            client.Object
		EvaluationCreateAttributes common.CreateEvaluationAttributes
	}
	mock.lockReconcileEvaluations.RLock()
	calls = mock.calls.ReconcileEvaluations
	mock.lockReconcileEvaluations.RUnlock()
	return calls
}
